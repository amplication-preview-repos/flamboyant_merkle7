/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  BillingInformation as PrismaBillingInformation,
} from "@prisma/client";

export class BillingInformationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.BillingInformationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.billingInformation.count(args);
  }

  async billingInformations(
    args: Prisma.BillingInformationFindManyArgs
  ): Promise<PrismaBillingInformation[]> {
    return this.prisma.billingInformation.findMany(args);
  }
  async billingInformation(
    args: Prisma.BillingInformationFindUniqueArgs
  ): Promise<PrismaBillingInformation | null> {
    return this.prisma.billingInformation.findUnique(args);
  }
  async createBillingInformation(
    args: Prisma.BillingInformationCreateArgs
  ): Promise<PrismaBillingInformation> {
    return this.prisma.billingInformation.create(args);
  }
  async updateBillingInformation(
    args: Prisma.BillingInformationUpdateArgs
  ): Promise<PrismaBillingInformation> {
    return this.prisma.billingInformation.update(args);
  }
  async deleteBillingInformation(
    args: Prisma.BillingInformationDeleteArgs
  ): Promise<PrismaBillingInformation> {
    return this.prisma.billingInformation.delete(args);
  }
}
