/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CustomerProfile as PrismaCustomerProfile,
} from "@prisma/client";

export class CustomerProfileServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CustomerProfileCountArgs, "select">
  ): Promise<number> {
    return this.prisma.customerProfile.count(args);
  }

  async customerProfiles(
    args: Prisma.CustomerProfileFindManyArgs
  ): Promise<PrismaCustomerProfile[]> {
    return this.prisma.customerProfile.findMany(args);
  }
  async customerProfile(
    args: Prisma.CustomerProfileFindUniqueArgs
  ): Promise<PrismaCustomerProfile | null> {
    return this.prisma.customerProfile.findUnique(args);
  }
  async createCustomerProfile(
    args: Prisma.CustomerProfileCreateArgs
  ): Promise<PrismaCustomerProfile> {
    return this.prisma.customerProfile.create(args);
  }
  async updateCustomerProfile(
    args: Prisma.CustomerProfileUpdateArgs
  ): Promise<PrismaCustomerProfile> {
    return this.prisma.customerProfile.update(args);
  }
  async deleteCustomerProfile(
    args: Prisma.CustomerProfileDeleteArgs
  ): Promise<PrismaCustomerProfile> {
    return this.prisma.customerProfile.delete(args);
  }
}
